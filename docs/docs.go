// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://www.nuorder.com/",
        "contact": {
            "name": "NuOrder API Support",
            "email": "flavio.costa@ecore.com.br"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.nuorder.com/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/answer": {
            "get": {
                "description": "Get a list of all questions and answers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "faq"
                ],
                "summary": "Get a list to all questions and answers from API",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Answer"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/answer/{id}": {
            "get": {
                "description": "Get a question and answer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "faq"
                ],
                "summary": "Get one question and answer item from the API",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ObjectId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Answer"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a new Question and Answer with the input paylod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "faq"
                ],
                "summary": "Update a new Question and Answer item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ObjectId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update",
                        "name": "faq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Answer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ObjectIdHex(id), was successful updated!"
                    }
                }
            },
            "delete": {
                "description": "Delete a question and answer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "faq"
                ],
                "summary": "Delete one question and answer item from the API",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ObjectId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result: success"
                    }
                }
            }
        },
        "/api/v1/faq": {
            "post": {
                "description": "Create a new Question and Answer with the input paylod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "faq"
                ],
                "summary": "Create a new Question and Answer item",
                "parameters": [
                    {
                        "description": "Create",
                        "name": "faq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Answer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Answer"
                        }
                    }
                }
            }
        },
        "/api/v1/question": {
            "get": {
                "description": "Get a list of all questions and answers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "faq"
                ],
                "summary": "Get a list to all questions and answers from API",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Question"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Question and Answer with the input paylod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "faq"
                ],
                "summary": "Create a new Question and Answer item",
                "parameters": [
                    {
                        "description": "Create",
                        "name": "faq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Question"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Question"
                        }
                    }
                }
            }
        },
        "/api/v1/question/{id}": {
            "get": {
                "description": "Get a question and answer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "faq"
                ],
                "summary": "Get one question and answer item from the API",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ObjectId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Question"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a new Question and Answer with the input paylod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "faq"
                ],
                "summary": "Update a new Question and Answer item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ObjectId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update",
                        "name": "faq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Question"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ObjectIdHex(id), was successful updated!"
                    }
                }
            },
            "delete": {
                "description": "Delete a question and answer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "faq"
                ],
                "summary": "Delete one question and answer item from the API",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ObjectId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result: success"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Answer": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Answer"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "7f484f697ee1283a0ca5a028"
                },
                "likes": {
                    "type": "integer",
                    "example": 10
                },
                "parent": {
                    "type": "string",
                    "example": "5f484f697ee3881a0ca9a037"
                },
                "text": {
                    "type": "string",
                    "example": "How can I remove an item?"
                }
            }
        },
        "models.Question": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "5f484f697ee3881a0ca9a037"
                },
                "image": {
                    "type": "string",
                    "example": "http://nuorder.com/images/image.jpg"
                },
                "likes": {
                    "type": "integer",
                    "example": 30
                },
                "text": {
                    "type": "string",
                    "example": "How can I remove an item?"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:3000",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "FAQ API",
	Description: "This is a MVP for Questions and Answers for https://www.nuorder.com/ page",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
